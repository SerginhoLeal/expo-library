import * as React from 'react';
import * as Native from 'react-native';
import * as Styles from './styles';
import { Props } from './types';

export const Icon: React.FC<Props> = ({
  name = 'user',
  size = '50',
  color = '#fff',
  weight = 2,
}: Props) => {
  switch (name) {
    case 'home':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath d="M18.1 34C18.0448 34 18 33.9552 18 33.9V22.9804C18 22.4389 18.4389 22 18.9804 22C18.9912 22 19 22.0088 19 22.0196V33.9C19 33.9552 18.9552 34 18.9 34H18.1Z" fill={color}/>
          <Styles.StyledPath d="M34.8599 25.8656C34.673 26.0448 34.37 26.0448 34.1832 25.8656L24.7098 16.7831C24.5229 16.604 24.5229 16.3135 24.7098 16.1344C24.8966 15.9552 25.1996 15.9552 25.3864 16.1344L34.8599 25.2169C35.0467 25.396 35.0467 25.6865 34.8599 25.8656Z" fill={color}/>
          <Styles.StyledPath d="M15.1401 25.8656C14.9533 25.6865 14.9533 25.396 15.1401 25.2169L24.6136 16.1344C24.8004 15.9552 25.1034 15.9552 25.2902 16.1344C25.4771 16.3135 25.4771 16.604 25.2902 16.7831L15.8168 25.8656C15.63 26.0448 15.327 26.0448 15.1401 25.8656Z" fill={color}/>
          <Styles.StyledPath d="M31.1 34C31.0448 34 31 33.9552 31 33.9V22.0196C31 22.0088 31.0088 22 31.0196 22C31.5611 22 32 22.4389 32 22.9804V33.9C32 33.9552 31.9552 34 31.9 34H31.1Z" fill={color}/>
        </Styles.StyledSvg>
      );

    case 'user':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath fillRule="evenodd" clipRule="evenodd" d="M29 21C29 23.2091 27.2091 25 25 25C22.7909 25 21 23.2091 21 21C21 18.7909 22.7909 17 25 17C27.2091 17 29 18.7909 29 21ZM28 21C28 22.6569 26.6569 24 25 24C23.3431 24 22 22.6569 22 21C22 19.3431 23.3431 18 25 18C26.6569 18 28 19.3431 28 21Z" fill={color}/>
          <Styles.StyledPath d="M19.2724 29.2724C17.7534 30.7915 16.9 32.8517 16.9 35H16C16 34.6643 16.0188 34.3305 16.0557 34C16.2814 31.981 17.1856 30.0865 18.636 28.636C20.3239 26.9482 22.6131 26 25 26C27.3869 26 29.6761 26.9482 31.364 28.636C32.8144 30.0865 33.7186 31.981 33.9443 34C33.9812 34.3305 34 34.6643 34 35H33.1C33.1 32.8517 32.2466 30.7915 30.7276 29.2724C29.2085 27.7534 27.1483 26.9 25 26.9C22.8517 26.9 20.7915 27.7534 19.2724 29.2724Z" fill={color}/>
        </Styles.StyledSvg>
      );

    case 'download':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 43 43">
          <Styles.StyledPath
            d="M21.5 15V25.7426L25.9497 21.2929L26.6569 22L21.7105 26.9463L21.714 26.9497L21.0069 27.6569L21.0034 27.6534L21 27.6569L20.2929 26.9497L20.2963 26.9463L15.35 22L16.0571 21.2929L20.5 25.7358V15H21.5Z"
            strokeWidth={weight - 1}
            stroke={color}
            fill={color}
          />
          <Styles.StyledPath
            d="M29 30V29H13V30H29Z"
            strokeWidth={weight - 1}
            stroke={color}
            fill={color}
          />
        </Styles.StyledSvg>
      );

    case 'plus':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath d="M25.5 16H24.5V24.5H16V25.5H24.5V34H25.5V25.5H34V24.5H25.5V16Z" fill={color}/>
        </Styles.StyledSvg>
      );

    case 'arrow-rotate':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath d="M31.8084 22.0017L30.6892 21.6474C30.6366 21.6307 30.5804 21.6599 30.5637 21.7125L30.3222 22.4752C30.3056 22.5279 30.3347 22.5841 30.3874 22.6007L32.9696 23.4183C33.0222 23.4349 33.0784 23.4058 33.0951 23.3531L33.9137 20.7683C33.9303 20.7157 33.9012 20.6595 33.8485 20.6428L33.0858 20.4013C33.0332 20.3846 32.977 20.4138 32.9603 20.4665L32.6469 21.4564C31.84 20.2036 30.732 19.1668 29.4187 18.4443C27.8592 17.5863 26.0802 17.21 24.3067 17.363C22.5333 17.5161 20.845 18.1916 19.4555 19.3041C18.066 20.4166 17.0375 21.9162 16.5003 23.6132C15.963 25.3102 15.941 27.1284 16.4371 28.8379C16.9331 30.5474 17.925 32.0714 19.2872 33.2172C20.6495 34.363 22.3209 35.0792 24.0901 35.275C25.8593 35.4709 27.6469 35.1378 29.2268 34.3177L28.766 33.43C27.3617 34.1589 25.7727 34.455 24.2001 34.2809C22.6276 34.1068 21.1419 33.4702 19.9311 32.4518C18.7202 31.4333 17.8386 30.0787 17.3977 28.5592C16.9567 27.0396 16.9763 25.4235 17.4538 23.9151C17.9314 22.4067 18.8455 21.0737 20.0807 20.0849C21.3158 19.096 22.8164 18.4956 24.3927 18.3596C25.9691 18.2235 27.5503 18.558 28.9366 19.3207C30.1052 19.9636 31.091 20.8865 31.8084 22.0017Z" fill={color}/>
        </Styles.StyledSvg>
      );

    case 'check':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath
            d="M21.299 31.7644L21.2842 31.7792L16 26.495L17.0682 25.4269L21.2866 29.6453L32.9318 18L34 19.0682L21.3014 31.7668L21.299 31.7644Z"
            strokeWidth={weight - .8}
            stroke={color}
            fill={color}
          />
        </Styles.StyledSvg>
      );

    case 'play':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath
            d="M25.6504 19.1284L15.8902 13.6383C15.2236 13.2633 14.3999 13.745 14.3999 14.5098V25.4901C14.3999 26.255 15.2236 26.7367 15.8902 26.3617L25.6504 20.8716C26.3301 20.4893 26.3301 19.5107 25.6504 19.1284Z"
            strokeWidth={weight}
            stroke={color}
          />
        </Styles.StyledSvg>
      );

    case 'pause':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath strokeWidth={weight} d="M21 16H20V34H21V16Z" stroke={color} />
          <Styles.StyledPath strokeWidth={weight} d="M30 16H29V34H30V16Z" stroke={color} />
        </Styles.StyledSvg>
      );

    case 'google-photo':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath fill-rule="evenodd" clip-rule="evenodd" d="M19.0471 3.89358C21.2377 2.27884 23.6981 1.67503 24.7895 1.47549V24.8199C24.5197 24.7368 24.1718 24.6204 23.7684 24.4651C22.7753 24.0827 21.454 23.4672 20.1358 22.5354C17.5075 20.6774 14.9049 17.5773 14.9049 12.5282C14.9049 8.16236 16.848 5.51458 19.0471 3.89358ZM23.3519 31.3957C24.1711 30.2368 24.758 29.08 25.1648 28.1221V49.6945C25.1648 50.2752 25.6712 50.7707 26.2957 50.6589C27.4293 50.4561 30.1013 49.8218 32.5005 48.0533C34.922 46.2683 37.0493 43.3364 37.0493 38.6137C37.0493 33.1535 34.2097 29.7792 31.3957 27.79C30.0447 26.835 28.6967 26.1958 27.6631 25.7895H49.6945C50.2752 25.7895 50.7707 25.2831 50.6589 24.6585C50.4561 23.5249 49.8218 20.853 48.0533 18.4537C46.2683 16.0322 43.3364 13.9049 38.6137 13.9049C33.1535 13.9049 29.7792 16.7445 27.79 19.5586C26.835 20.9095 26.1958 22.2576 25.7895 23.2912V1.44741C25.7895 0.866745 25.2831 0.371215 24.6585 0.482955C23.5249 0.685755 20.853 1.3201 18.4537 3.08863C16.0322 4.8736 13.9049 7.80549 13.9049 12.5282C13.9049 17.9884 16.7445 21.3627 19.5586 23.3519C20.7174 24.1711 21.8742 24.758 22.8321 25.1648H1.44741C0.866745 25.1648 0.371215 25.6712 0.482955 26.2957C0.685755 27.4293 1.3201 30.1013 3.08863 32.5005C4.8736 34.922 7.80549 37.0493 12.5282 37.0493C17.9884 37.0493 21.3627 34.2097 23.3519 31.3957ZM3.89358 31.9072C2.27884 29.7166 1.67503 27.2561 1.47549 26.1648H24.8199C24.7368 26.4346 24.6204 26.7825 24.4651 27.1858C24.0827 28.1789 23.4672 29.5002 22.5354 30.8184C20.6774 33.4467 17.5773 36.0493 12.5282 36.0493C8.16236 36.0493 5.51458 34.1063 3.89358 31.9072ZM26.1648 49.6664C27.2561 49.4669 29.7166 48.8631 31.9072 47.2483C34.1063 45.6273 36.0493 42.9795 36.0493 38.6137C36.0493 33.5646 33.4467 30.4645 30.8184 28.6065C29.5002 27.6747 28.1789 27.0592 27.1858 26.6768C26.7825 26.5215 26.4346 26.4051 26.1648 26.322V49.6664ZM47.2483 19.0471C48.8631 21.2377 49.4669 23.6981 49.6664 24.7895H26.322C26.4051 24.5197 26.5215 24.1718 26.6768 23.7684C27.0592 22.7753 27.6747 21.454 28.6065 20.1358C30.4645 17.5075 33.5646 14.9049 38.6137 14.9049C42.9795 14.9049 45.6273 16.848 47.2483 19.0471Z" fill={color}/>
        </Styles.StyledSvg>
      );

    case 'loading':
      return <Native.ActivityIndicator color={color} size={Number(size) - 30} />;

    case 'tags':
      return (
        <Styles.StyledSvg width={size} height={size} viewBox="0 0 50 50">
          <Styles.StyledPath
            d="M16 22.7929V16.5C16 16.2239 16.2239 16 16.5 16H22.7929C22.9255 16 23.0527 16.0527 23.1464 16.1464L33.6464 26.6464C33.8417 26.8417 33.8417 27.1583 33.6464 27.3536L27.3536 33.6464C27.1583 33.8417 26.8417 33.8417 26.6464 33.6464L16.1464 23.1464C16.0527 23.0527 16 22.9255 16 22.7929Z"
            strokeWidth={weight}
            stroke={color}
          />
        </Styles.StyledSvg>
      )

    default:
      break;
  }
  return null;
};
